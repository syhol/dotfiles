#!/usr/bin/env -S usage bash
#USAGE cmd "apply" {
#USAGE   arg <THEME>
#USAGE }
#USAGE cmd "select" {}
#USAGE complete "theme" run="ls -1 ~/.config/themes"

function apply() {

  echo "Applying $1"

  WEZTERM_THEME="$(yq '.wezterm' $1)"
  sd "color_scheme = '(.*)'" "color_scheme = '${WEZTERM_THEME}'" ~/.config/wezterm/wezterm.lua
  
  GHOSTTY_THEME="$(yq '.ghostty' $1)"
  sd "theme = (.*)" "theme = ${GHOSTTY_THEME}" ~/.config/ghostty/config

  HELIX_THEME="$(yq '.helix' $1)"
  sd "theme = \"(.*)\"" "theme = \"${HELIX_THEME}\"" ~/.config/helix/config.toml
  pkill -USR1 hx || true

  NEOVIM_THEME="$(yq '.neovim' $1)"
  sd "colorscheme = \"(.*)\"" "colorscheme = \"${NEOVIM_THEME}\"" ~/.config/nvim/lua/plugins/colorscheme.lua

  BAT_THEME="$(yq '.bat' $1)"
  sd -- "--theme=\"(.*)\"" "--theme=\"${BAT_THEME}\"" ~/.config/bat/config

  VSCODE_THEME="$(yq '.vscode' $1)"
  sd "\"workbench.colorTheme\": \"(.*)\"" "\"workbench.colorTheme\": \"${VSCODE_THEME}\"" ~/Library/Application\ Support/Code/User/settings.json

  FISH_THEME="$(yq '.fish' $1)"
  fish -c "yes | fish_config theme save '${FISH_THEME}'"

  DELTA_THEME="$(yq '.delta // "none"' $1)"
  sd "syntax-theme = (.*)" "syntax-theme = ${BAT_THEME}" ~/.config/git/config
  sd "features = (.*) # themeset" "features = ${DELTA_THEME} # themeset" ~/.config/git/config

  VIVID_THEME="$(yq '.vivid' $1)"
  cat >~/.config/shell/theme.sh <<EOL
# This file is autogenerated by ~/.local/bin/themeset

export LS_COLORS="$(vivid generate ${VIVID_THEME})"
EOL

  mkdir -p ~/.local/state/themeset
  echo "$(basename "${1}" .yaml)" >~/.local/state/themeset/current-theme.txt

  echo "To finish applying the theme to the current shell, run the following:"
  echo "source ~/.config/shell/theme.sh"

  osascript << 'EOL'
tell application "System Events"
    tell process "Ghostty"
        click menu item "Reload Configuration" of menu "Ghostty" of menu bar item "Ghostty" of menu bar 1
    end tell
end tell
EOL

}

function select_theme() {
  CURRENT_THEME="$(cat ~/.local/state/themeset/current-theme.txt 2>/dev/null)"

  FILES=(~/.config/themes/*.yaml)
  TOTAL=${#FILES[@]}
  I=0
  POS=0
  for FILE in "${FILES[@]}"; do
    I=$((I + 1))
    if [ "$(basename ${FILE} .yaml)" == "${CURRENT_THEME}" ]; then
      POS=$((I - TOTAL - 1))
    fi
  done

  ls ~/.config/themes/*.yaml | xargs -I{} basename {} .yaml | fzf --cycle --bind "load:pos:${POS}" --preview-window '80%,border-left' --preview '
    themeset apply ~/.config/themes/{}.yaml >/dev/null
    source ~/.config/shell/theme.sh
  
    starship prompt
    set_color $fish_color_command; echo ls; set_color normal
    ls --color always

    starship prompt
    set_color $fish_color_command; echo cat; set_color normal
    bat --color always ~/.config/shell/env.sh
  '

  echo "To finish applying the theme to the current shell, run the following:"
  echo "source ~/.config/shell/theme.sh"
}

if [ "$2" != "" ]; then
  apply "$2"
else
  select_theme
fi
